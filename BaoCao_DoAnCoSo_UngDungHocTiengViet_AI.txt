================================================================================
                      BÁO CÁO ĐỒ ÁN CƠ SỞ
                ỨNG DỤNG HỌC TIẾNG VIỆT TÍCH HỢP AI
            "Việt Ngữ Thông Minh - Smart Vietnamese Learning App"
================================================================================

THÔNG TIN ĐỒ ÁN
================================================================================
- Tên đồ án: Ứng dụng học tiếng Việt tích hợp trí tuệ nhân tạo
- Sinh viên thực hiện: Huỳnh Văn Khuân
- MSSV: 2205CT0035
- Lớp: CT06PM
- Khoa: Kỹ Thuật Công Nghệ
- Trường: Đại học Hùng Vương TP. Hồ Chí Minh
- Năm học: 2024-2025

MỤC TIÊU VÀ TẦM NHÌN DỰ ÁN
================================================================================

Mục tiêu chính:
- Xây dựng ứng dụng di động hiện đại hỗ trợ học tiếng Việt cho người nước ngoài
- Tích hợp công nghệ AI để tạo trải nghiệm học tập thông minh và tương tác
- Phát triển hệ thống phát âm và nhận dạng giọng nói tiên tiến
- Tạo môi trường học tập gamification với hệ thống XP và achievement

Đối tượng người dùng:
- Sinh viên quốc tế tại Việt Nam
- Du khách và người kinh doanh quốc tế
- Những người yêu thích văn hóa Việt Nam
- Học viên DHV cần học nội dung chuyên biệt

KIẾN TRÚC CÔNG NGHỆ
================================================================================

1. Frontend Architecture
Framework: Flutter 3.x
Language: Dart (SDK >= 3.0.0)
UI Framework: Material Design 3
State Management: Provider + Riverpod hybrid
Architecture Pattern: Service-Repository-Widget separation

2. Backend & Cloud Services
Authentication: Firebase Auth (Email, Google, Facebook, Apple)
Database: Cloud Firestore (NoSQL)
Storage: Firebase Storage
Push Notifications: Firebase Cloud Messaging
Analytics: Firebase Analytics
Real-time Sync: Firestore real-time listeners
Security: Firebase App Check + Security Rules

3. AI & Speech Processing
Primary AI: OpenAI GPT-3.5/GPT-4
Secondary AI: Google Gemini Pro
Text-to-Speech: Flutter TTS với giọng Việt
Speech-to-Text: Speech Recognition cho đánh giá phát âm
Pronunciation Assessment: AI-powered analysis
Context-aware Conversations: Multi-turn dialogue with memory

CÔNG NGHỆ VÀ DEPENDENCIES CHÍNH
================================================================================

Core Framework:
- flutter: sdk (3.0.0+)
- dart: 3.0.0+

Firebase Integration:
- firebase_core: ^3.14.0
- firebase_auth: ^5.6.0
- cloud_firestore: ^5.6.9
- firebase_storage: ^12.4.6
- firebase_app_check: ^0.3.2+6

AI & Communication:
- http: ^1.1.0              # AI API calls
- dio: ^5.3.2               # Advanced HTTP client

Speech & Audio:
- flutter_tts: ^4.2.3       # Text-to-Speech
- speech_to_text: ^7.0.0    # Speech Recognition
- record: ^6.0.0            # Audio recording
- just_audio: ^0.10.4       # Audio playback
- permission_handler: ^12.0.0+1  # Microphone permissions

State Management:
- provider: ^6.1.1          # State management
- flutter_riverpod: ^2.4.9  # Advanced state management

UI/UX & Animations:
- lottie: ^3.3.1            # Advanced animations
- flutter_animate: ^4.3.0   # UI animations
- flutter_localizations: sdk # Internationalization

Data & Storage:
- shared_preferences: ^2.2.2     # Local settings
- flutter_secure_storage: ^9.2.4 # Secure data
- path_provider: ^2.1.1          # File paths

Notifications & Authentication:
- flutter_local_notifications: ^18.0.1
- google_sign_in: ^6.1.6
- flutter_facebook_auth: ^7.1.2
- sign_in_with_apple: ^7.0.1
- timezone: ^0.10.0

KIẾN TRÚC HỆ THỐNG
================================================================================

1. Architectural Pattern
┌─────────────────┐    ┌─────────────────┐    ┌─────────────────┐
│   Presentation  │ -> │   Business      │ -> │   Data Layer    │
│     Layer       │    │     Logic       │    │                 │
│   (Widgets)     │    │   (Services)    │    │ (Repositories)  │
└─────────────────┘    └─────────────────┘    └─────────────────┘

2. Service Layer Architecture
Core Services:
├── firebase_service.dart        # Firebase initialization
├── auth_service.dart           # Authentication logic
├── ai_chat_service.dart        # AI chatbot integration
├── pronunciation_service.dart   # Speech processing
├── universal_tts_service.dart  # Text-to-speech
├── xp_service.dart            # Gamification system
├── user_progress_service.dart  # Learning progress
├── notification_service.dart   # Smart notifications
├── learning_goal_service.dart  # Goal management
└── user_service.dart          # User data management

3. Data Models
Core Models:
├── user_model.dart            # User profile
├── user_experience.dart       # XP and gamification
├── achievement.dart           # Achievement system
├── learning_goal.dart         # Learning objectives
├── chat_conversation.dart     # AI chat models
└── pronunciation_lesson.dart  # Speech learning

HỆ THỐNG GAMIFICATION & XP
================================================================================

1. Experience Point System
XP Activities & Rewards:
├── Lesson Completed: 25 XP
├── Quiz Perfect: 50 XP
├── Quiz Good: 30 XP
├── Daily Streak: 10 XP
├── Weekly Streak: 50 XP
├── Monthly Streak: 200 XP
├── Pronunciation Practice: 15 XP
├── Chatbot Interaction: 10 XP
└── Achievement Unlocked: 30 XP

2. Level System
Level Progression:
├── Level 1: 0 XP - "Học viên mới"
├── Level 2: 100 XP - "Người mới bắt đầu"
├── Level 3: 300 XP - "Học sinh cần cù"
├── Level 4: 600 XP - "Người học nghiêm túc"
├── Level 5: 1000 XP - "Học giả trẻ"
├── Level 10: 5500 XP - "Huyền thoại"
└── Level 11+: +1000 XP per level

3. Achievement System
Key Achievements:
├── first_login: "Chào mừng đến DHV!"
├── streak_7: "Tuần hoàn hảo"
├── streak_30: "Tháng xuất sắc"
├── lessons_100: "Chuyên gia học tập"
├── dhv_graduate: "Tốt nghiệp DHV Core"
└── quiz_perfect_5: "Thầy quiz"

TÍCH HỢP AI THÔNG MINH
================================================================================

1. Multi-Provider AI System
AI Providers:
├── Primary: OpenAI GPT-3.5/4
│   ├── Model: gpt-3.5-turbo
│   ├── Use case: Conversational AI
│   ├── Context: 7-message memory
│   └── Temperature: 0.9 (creative)
│
└── Secondary: Google Gemini
    ├── Model: gemini-1.5-flash
    ├── Use case: Fallback & multimodal
    ├── Tokens: 500 max
    └── Cost-effective alternative

2. AI Capabilities
Advanced Features:
├── Context-aware conversations
├── Learning level adaptation
├── Scenario-based dialogues
├── Grammar correction with explanations
├── Vocabulary suggestions
├── Cultural context education
├── Progress tracking within chats
└── Multi-language support

3. Conversation Scenarios
Available Scenarios:
├── general: "Giao tiếp cơ bản"
├── shopping: "Mua sắm"
├── restaurant: "Nhà hàng"
├── directions: "Hỏi đường"
├── hotel: "Khách sạn"
├── workplace: "Công việc"
├── healthcare: "Sức khỏe"
└── family: "Gia đình"

HỆ THỐNG PHÁT ÂM & SPEECH PROCESSING
================================================================================

1. Pronunciation Assessment
Assessment Components:
├── Overall Score: 0-100%
├── Accuracy Score: Pronunciation correctness
├── Fluency Score: Speech rhythm and flow
├── Completeness Score: Content coverage
├── Word-level Analysis: Individual word scores
└── Phoneme-level Analysis: Sound accuracy

2. Speech Technologies
Speech Services:
├── Flutter TTS: Vietnamese voice synthesis
├── Speech-to-Text: Real-time recognition
├── Audio Recording: High-quality capture
├── Audio Playback: Comparison tool
├── Permission Management: Microphone access
└── AI-powered Analysis: Advanced assessment

3. Pronunciation Features
Learning Tools:
├── Sample audio playback
├── Real-time recording
├── Instant feedback
├── Word-by-word analysis
├── Improvement suggestions
├── Progress tracking
└── Adaptive difficulty

CONTENT ARCHITECTURE
================================================================================

1. DHV Core Curriculum
Specialized Content:
├── Unit 1: Tổng quan ĐH Hùng Vương (8 lessons)
│   ├── Ý nghĩa tên trường
│   ├── Lịch sử 30 năm (1995-2025)
│   ├── Sứ mệnh - Tầm nhìn
│   ├── Cơ sở vật chất
│   ├── Hệ thống tổ chức
│   ├── Phòng ban liên quan SV
│   ├── Các Khoa đào tạo
│   └── Kiểm tra tổng hợp
│
└── Unit 2: Chương trình Khoa Kỹ Thuật Công Nghệ (8 lessons)
    ├── Giới thiệu ngành CNTT
    ├── Chương trình đào tạo
    ├── Kỹ năng cần thiết
    ├── Cơ hội nghề nghiệp
    ├── Công nghệ hiện đại
    ├── Dự án sinh viên
    ├── Thực tập doanh nghiệp
    └── Kiểm tra chuyên ngành

2. Life Theme Content
General Vietnamese:
├── Family & Relationships
├── Shopping & Commerce
├── Food & Dining
├── Transportation
├── Healthcare
├── Daily Activities
├── Cultural Events
└── Business Communication

3. Interactive Learning Elements
Learning Components:
├── Visual Cards: Images and videos
├── Audio Cards: Pronunciation practice
├── Interactive Quizzes: Multiple choice/True-false
├── Fill-in-the-blank exercises
├── Drag-and-drop activities
├── Vocabulary flashcards
└── Cultural context explanations

HỆ THỐNG ĐA NGÔN NGỮ (I18N)
================================================================================

1. Supported Languages
Localization Support:
├── vi (Vietnamese): Primary language
├── en (English): International users
├── zh (Chinese): Regional support
├── ja (Japanese): Asian market
└── ko (Korean): Asian market

2. Translation System
Implementation:
├── AppLocalizations: Flutter framework
├── Dynamic language switching
├── Extension methods: .tr for easy usage
├── Fallback support: English default
└── Cultural adaptations: Date/time formats

SECURITY & AUTHENTICATION
================================================================================

1. Authentication Methods
Login Options:
├── Email/Password: Firebase Auth
├── Google OAuth 2.0: Social login
├── Facebook Login: Social integration
├── Apple Sign-In: iOS requirement
└── Anonymous: Guest access

2. Security Measures
Security Implementation:
├── Firebase App Check: API protection
├── Firestore Security Rules: Data access control
├── Secure Storage: Sensitive data encryption
├── Input Validation: XSS/Injection prevention
├── Token Management: Automatic refresh
└── Privacy Controls: GDPR compliance

STATE MANAGEMENT STRATEGY
================================================================================

1. Provider Architecture
State Providers:
├── ThemeNotifier: Dark/Light mode
├── LanguageNotifier: Internationalization
├── UserProgressProvider: Learning state
├── XPProvider: Gamification state
└── AuthProvider: Authentication state

2. Data Flow
State Management Flow:
User Action → Service Layer → Provider → UI Update
     ↓              ↓           ↓         ↓
  Button Tap → XPService → XPProvider → Widget Rebuild

USER INTERFACE & EXPERIENCE
================================================================================

1. Design System
UI Framework:
├── Material Design 3: Modern Google design
├── Custom Color Scheme: DHV branding (#DA020E)
├── Dark/Light Themes: User preference
├── Responsive Design: Multiple screen sizes
├── Accessibility: Screen reader support
└── Animation System: Smooth transitions

2. Screen Architecture
Core Screens:
├── Authentication Flow: Login/Register
├── Dashboard: Progress overview
├── Lesson Screen: Learning content
├── Pronunciation Screen: Speech practice
├── Chatbot Screen: AI conversation
├── Settings Screen: User preferences
└── Onboarding: First-time setup

3. Custom Widgets
Reusable Components:
├── CustomAppBar: Branded navigation
├── CustomButton: Consistent styling
├── XPProgressWidget: Gamification display
├── AchievementWidget: Success celebration
├── DuolingoQuizWidget: Interactive quizzes
└── TTSHelperWidget: Speech assistance

PERFORMANCE & OPTIMIZATION
================================================================================

1. Performance Features
Optimization Techniques:
├── Lazy loading: Content on demand
├── Image optimization: Cached assets
├── Audio compression: Efficient streaming
├── Memory management: Proper disposal
├── Battery optimization: Efficient algorithms
└── Network efficiency: Minimal API calls

2. Scalability Architecture
Scalable Design:
├── Modular services: Independent components
├── Pluggable AI providers: Easy switching
├── Configurable content: Dynamic updates
├── Cloud-based assets: CDN delivery
└── Horizontal scaling: Multi-platform support

TESTING STRATEGY
================================================================================

1. Test Coverage
Testing Structure:
├── Unit Tests: Business logic validation
├── Widget Tests: UI component testing
├── Integration Tests: End-to-end flows
├── XP System Tests: Gamification logic
└── Performance Tests: Memory and speed

2. Quality Assurance
Code Quality:
├── Flutter Lints: Static analysis
├── Analysis Options: Custom rules
├── Code Formatting: Consistent style
├── Documentation: Comprehensive comments
└── Error Handling: Graceful failures

DEPLOYMENT & DISTRIBUTION
================================================================================

1. Build Configuration
Development:
flutter run --debug

Production:
flutter build apk --release
flutter build ios --release
flutter build web --release

2. Platform Support
Target Platforms:
├── Android: API level 21+ (Android 5.0+)
├── iOS: iOS 11.0+
├── Web: Progressive Web App
├── Windows: Desktop support
├── macOS: Desktop support
└── Linux: Desktop support

INNOVATION HIGHLIGHTS
================================================================================

1. Technical Innovation
- Dual AI Provider System: OpenAI + Gemini for reliability
- Context-Aware Conversations: 7-message memory with intelligent context
- Advanced Speech Assessment: Real-time pronunciation analysis
- Gamified Learning: Comprehensive XP and achievement system
- Multi-Platform Architecture: 6 platform support with single codebase

2. Educational Innovation
- Adaptive Learning: AI adjusts to user skill level
- Cultural Integration: Real university content from DHV
- Scenario-Based Learning: Practical conversation contexts
- Immediate Feedback: Real-time corrections and suggestions
- Progress Visualization: Detailed analytics and achievements

PROJECT METRICS
================================================================================

1. Development Statistics
Codebase Metrics:
├── Total Lines of Code: ~15,000+ lines
├── Languages: Dart (95%), Platform code (5%)
├── Files: 100+ Dart files
├── Dependencies: 35+ packages
├── Platforms: 6 supported platforms
├── Features: 20+ major features
└── Test Coverage: Unit + Widget + Integration

2. Feature Completeness
Implementation Status:
✅ Authentication System (100%)
✅ Firebase Integration (100%)
✅ AI Chatbot (100%)
✅ Pronunciation System (100%)
✅ Lesson Content (100%)
✅ XP/Achievement System (100%)
✅ Localization (100%)
✅ Theme System (100%)
✅ Notification System (100%)
✅ Progress Tracking (100%)

GIÁO DỤC VÀ TÁC ĐỘNG
================================================================================

1. Phương pháp giáo dục
- Communicative Language Teaching (CLT): Giao tiếp thực tế
- Task-Based Learning: Học qua hoạt động thực hành
- Gamification: Tăng động lực học tập
- Spaced Repetition: Ôn tập theo chu kỳ
- Immediate Feedback: Phản hồi tức thì

2. Tác động xã hội
- Hỗ trợ sinh viên quốc tế tại Việt Nam
- Thúc đẩy văn hóa Việt Nam ra thế giới
- Tạo cầu nối giao tiếp đa văn hóa
- Nâng cao chất lượng giáo dục số

CÁCH HOẠT ĐỘNG CỦA HỆ THỐNG
================================================================================

1. Luồng hoạt động chính:
a) Đăng nhập/Đăng ký
   - User chọn phương thức đăng nhập (Email, Google, Facebook, Apple)
   - Firebase Auth xử lý authentication
   - Tạo profile người dùng trong Firestore
   - Khởi tạo XP service và user experience

b) Onboarding (Lần đầu sử dụng)
   - Người dùng thiết lập mục tiêu học tập
   - Chọn trình độ hiện tại (beginner/intermediate/advanced)
   - Cấu hình thông báo và preferences
   - Hoàn thành bài test định vị trình độ

c) Dashboard - Trung tâm điều khiển
   - Hiển thị tiến độ học tập (XP, level, streak)
   - Thống kê hàng ngày/tuần/tháng
   - Gợi ý bài học tiếp theo từ AI
   - Shortcuts đến các tính năng chính

d) Lesson Flow - Quy trình học bài
   - Chọn unit (DHV Core hoặc Life Theme)
   - Học content (video, audio, text, interactive cards)
   - Thực hành với quiz và bài tập
   - Ghi âm và đánh giá phát âm
   - Nhận XP và kiểm tra achievements

e) AI Chatbot - Luyện hội thoại
   - Chọn scenario (restaurant, shopping, general, etc.)
   - AI adapts theo learning level của user
   - Context-aware conversation với memory 7 tin nhắn
   - Grammar correction và vocabulary suggestions
   - Real-time feedback và progress tracking

f) Pronunciation System - Luyện phát âm
   - Text-to-Speech phát âm mẫu
   - User ghi âm với microphone
   - AI analysis đánh giá pronunciation
   - Detailed feedback (accuracy, fluency, completeness)
   - Word-by-word và phoneme-level analysis

2. Data Flow Architecture:
User Input → UI Widget → Service Layer → Firebase/AI API → State Update → UI Refresh

3. XP & Gamification Flow:
Learning Activity → XP Service → Calculate Points → Update Firestore → Check Achievements → UI Notification

CONVERSION VÀ TÍCH HỢP AI
================================================================================

1. AI Integration Pattern:
a) Dual Provider System:
   - Primary: OpenAI GPT (gpt-3.5-turbo)
   - Secondary: Google Gemini (gemini-1.5-flash)
   - Automatic fallback khi API fails
   - Load balancing để optimize cost

b) Context Management:
   - Conversation history storage
   - User learning level tracking
   - Scenario-based prompt engineering
   - Cultural context integration

c) Response Processing:
   - Grammar correction detection
   - Vocabulary extraction
   - Cultural tip identification
   - Progress assessment integration

2. Speech Processing Conversion:
a) Audio Pipeline:
   Input Audio → STT Processing → Text Analysis → AI Assessment → Feedback Generation

b) TTS Pipeline:
   Text Input → Language Detection → Voice Synthesis → Audio Output → User Playback

c) Pronunciation Assessment:
   User Audio → Transcription → Comparison with Target → Score Calculation → Detailed Feedback

3. Real-time Synchronization:
- Firestore real-time listeners
- Automatic conflict resolution
- Offline capability with sync
- Multi-device consistency

KẾT LUẬN VÀ THÀNH TỰU
================================================================================

1. Thành tựu kỹ thuật
✅ Tích hợp thành công 2 AI provider (OpenAI + Gemini)
✅ Xây dựng hệ thống speech processing hoàn chỉnh
✅ Phát triển architecture scalable và maintainable
✅ Implement gamification system với 15+ achievements
✅ Support 6 platforms với single codebase
✅ Real-time sync với Firebase Firestore
✅ Advanced UI/UX với Material Design 3

2. Thành tựu giáo dục
✅ Nội dung học chuyên biệt cho DHV (16 lessons)
✅ Hệ thống Life Theme với các tình huống thực tế
✅ AI chatbot thông minh với context awareness
✅ Pronunciation assessment với feedback chi tiết
✅ Progress tracking và analytics toàn diện

3. Đóng góp học thuật
Dự án này thể hiện sự thành thạo trong:
- Cross-platform Mobile Development: Flutter expertise
- Cloud Backend Integration: Firebase ecosystem
- AI/ML Service Integration: OpenAI + Gemini APIs
- Speech Processing: TTS + STT implementation
- User Experience Design: Modern UI/UX principles
- Software Architecture: Scalable, maintainable code
- International Development: Multi-language support

ROADMAP TƯƠNG LAI
================================================================================

Ngắn hạn (3-6 tháng):
- Offline mode với local storage
- Advanced pronunciation scoring algorithms
- Social features (friend system, leaderboards)
- More AI conversation scenarios
- Performance optimizations

Dài hạn (6-12 tháng):
- Augmented Reality (AR) learning features
- Voice-only learning mode
- Adaptive learning algorithms với machine learning
- Teacher/Student portal
- API cho third-party integrations
- VR support cho immersive learning

CHI TIẾT TECHNICAL IMPLEMENTATION
================================================================================

1. Service Layer Details:

a) XPService Implementation:
- Singleton pattern để maintain state
- Firebase integration cho persistent storage
- Real-time XP calculation và level progression
- Achievement system với predefined templates
- Streak management với freeze capabilities
- Time-based counters (daily/weekly/monthly)

b) AIChatService Implementation:
- Dual provider architecture (OpenAI + Gemini)
- Context-aware conversation management
- Scenario-based prompt engineering
- Grammar correction và vocabulary suggestions
- Fallback response system cho reliability
- Rate limiting và error handling

c) PronunciationService Implementation:
- Speech-to-Text integration
- Audio recording và playback
- AI-powered pronunciation assessment
- Word-level và phoneme-level analysis
- Progress tracking cho pronunciation improvement
- Permission management cho microphone access

2. State Management Pattern:
- Provider pattern cho global state
- Riverpod cho advanced state management
- Local state cho UI components
- Persistent state với SharedPreferences
- Secure storage cho sensitive data

3. Firebase Integration:
- Authentication với multiple providers
- Firestore với real-time listeners
- Storage cho audio files và media
- Cloud Functions cho serverless logic
- Analytics cho user behavior tracking
- App Check cho API security

4. UI/UX Implementation:
- Material Design 3 theming
- Custom animation controllers
- Responsive design cho multiple screen sizes
- Dark/Light theme support
- Accessibility features
- Internationalization support

TECHNICAL CHALLENGES VÀ SOLUTIONS
================================================================================

1. AI Integration Challenges:
Problem: API reliability và cost management
Solution: Dual provider system với intelligent fallback

Problem: Context preservation across conversations
Solution: 7-message memory system với intelligent context compression

Problem: Real-time response processing
Solution: Streaming responses với progress indicators

2. Speech Processing Challenges:
Problem: Accuracy của pronunciation assessment
Solution: Multi-level analysis (overall, word, phoneme)

Problem: Cross-platform audio handling
Solution: Flutter plugins với native integration

Problem: Real-time audio processing
Solution: Efficient audio pipeline với caching

3. Performance Challenges:
Problem: Memory management với large audio files
Solution: Lazy loading và automatic cleanup

Problem: Network efficiency cho AI APIs
Solution: Request batching và intelligent caching

Problem: Battery optimization
Solution: Background task management và efficient algorithms

TESTING VÀ QUALITY ASSURANCE
================================================================================

1. Testing Strategy:
- Unit tests cho business logic (XP system, AI service)
- Widget tests cho UI components
- Integration tests cho user flows
- Performance tests cho memory và battery usage
- Security tests cho data protection

2. Code Quality Tools:
- Flutter Lints với custom rules
- Static analysis với analysis_options.yaml
- Code formatting với dartfmt
- Documentation với comprehensive comments
- Error handling với graceful degradation

3. CI/CD Pipeline:
- Automated testing trên multiple platforms
- Code coverage reporting
- Performance monitoring
- Automated deployment cho staging/production
- Security scanning cho dependencies

================================================================================
                                KẾT LUẬN
================================================================================

Dự án "Việt Ngữ Thông Minh" đại diện cho một cách tiếp cận hiện đại và toàn diện 
trong việc ứng dụng công nghệ AI và mobile development để giải quyết vấn đề giáo dục 
thực tế. Với việc tích hợp thành công các công nghệ tiên tiến như OpenAI GPT, 
Google Gemini, Firebase ecosystem, và Flutter framework, dự án không chỉ thể hiện 
khả năng kỹ thuật mà còn tạo ra giá trị giáo dục thực sự cho cộng đồng học tập 
tiếng Việt.

Sự kết hợp giữa gamification, AI conversation, pronunciation assessment, và 
content chuyên biệt cho DHV tạo nên một ecosystem học tập hoàn chỉnh và hấp dẫn. 
Dự án này không chỉ là một sản phẩm công nghệ mà còn là cầu nối văn hóa, 
giúp quảng bá tiếng Việt và văn hóa Việt Nam đến với bạn bè quốc tế.

================================================================================
Trường Đại học Hùng Vương TP. Hồ Chí Minh
Khoa Kỹ Thuật Công Nghệ - Đồ án cơ sở
Sinh viên: Huỳnh Văn Khuân (2205CT0035)
Năm học: 2024-2025
================================================================================ 